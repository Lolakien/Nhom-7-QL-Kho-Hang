#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QL_KhoHang
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_HangHoa")]
	public partial class QL_KhoHangDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietPhieuNhap(ChiTietPhieuNhap instance);
    partial void UpdateChiTietPhieuNhap(ChiTietPhieuNhap instance);
    partial void DeleteChiTietPhieuNhap(ChiTietPhieuNhap instance);
    partial void InsertViTriKho(ViTriKho instance);
    partial void UpdateViTriKho(ViTriKho instance);
    partial void DeleteViTriKho(ViTriKho instance);
    partial void InsertChiTietPhieuXuat(ChiTietPhieuXuat instance);
    partial void UpdateChiTietPhieuXuat(ChiTietPhieuXuat instance);
    partial void DeleteChiTietPhieuXuat(ChiTietPhieuXuat instance);
    partial void InsertDanhMuc(DanhMuc instance);
    partial void UpdateDanhMuc(DanhMuc instance);
    partial void DeleteDanhMuc(DanhMuc instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLichSuXuatKho(LichSuXuatKho instance);
    partial void UpdateLichSuXuatKho(LichSuXuatKho instance);
    partial void DeleteLichSuXuatKho(LichSuXuatKho instance);
    partial void InsertNhaCungCap(NhaCungCap instance);
    partial void UpdateNhaCungCap(NhaCungCap instance);
    partial void DeleteNhaCungCap(NhaCungCap instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhieuNhap(PhieuNhap instance);
    partial void UpdatePhieuNhap(PhieuNhap instance);
    partial void DeletePhieuNhap(PhieuNhap instance);
    partial void InsertPhieuXuat(PhieuXuat instance);
    partial void UpdatePhieuXuat(PhieuXuat instance);
    partial void DeletePhieuXuat(PhieuXuat instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertVaiTro(VaiTro instance);
    partial void UpdateVaiTro(VaiTro instance);
    partial void DeleteVaiTro(VaiTro instance);
    #endregion
		
		public QL_KhoHangDataContext() : 
				base(global::QL_KhoHang.Properties.Settings.Default.QL_HangHoaConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public QL_KhoHangDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_KhoHangDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_KhoHangDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_KhoHangDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietPhieuNhap> ChiTietPhieuNhaps
		{
			get
			{
				return this.GetTable<ChiTietPhieuNhap>();
			}
		}
		
		public System.Data.Linq.Table<ViTriKho> ViTriKhos
		{
			get
			{
				return this.GetTable<ViTriKho>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietPhieuXuat> ChiTietPhieuXuats
		{
			get
			{
				return this.GetTable<ChiTietPhieuXuat>();
			}
		}
		
		public System.Data.Linq.Table<DanhMuc> DanhMucs
		{
			get
			{
				return this.GetTable<DanhMuc>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LichSuXuatKho> LichSuXuatKhos
		{
			get
			{
				return this.GetTable<LichSuXuatKho>();
			}
		}
		
		public System.Data.Linq.Table<NhaCungCap> NhaCungCaps
		{
			get
			{
				return this.GetTable<NhaCungCap>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhieuNhap> PhieuNhaps
		{
			get
			{
				return this.GetTable<PhieuNhap>();
			}
		}
		
		public System.Data.Linq.Table<PhieuXuat> PhieuXuats
		{
			get
			{
				return this.GetTable<PhieuXuat>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<VaiTro> VaiTros
		{
			get
			{
				return this.GetTable<VaiTro>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietPhieuNhap")]
	public partial class ChiTietPhieuNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PhieuNhapID;
		
		private string _SanPhamID;
		
		private int _SoLuong;
		
		private System.Nullable<double> _GiaNhap;
		
		private System.Nullable<double> _TongTien;
		
		private EntityRef<PhieuNhap> _PhieuNhap;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhieuNhapIDChanging(string value);
    partial void OnPhieuNhapIDChanged();
    partial void OnSanPhamIDChanging(string value);
    partial void OnSanPhamIDChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnGiaNhapChanging(System.Nullable<double> value);
    partial void OnGiaNhapChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    #endregion
		
		public ChiTietPhieuNhap()
		{
			this._PhieuNhap = default(EntityRef<PhieuNhap>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhieuNhapID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PhieuNhapID
		{
			get
			{
				return this._PhieuNhapID;
			}
			set
			{
				if ((this._PhieuNhapID != value))
				{
					if (this._PhieuNhap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhieuNhapIDChanging(value);
					this.SendPropertyChanging();
					this._PhieuNhapID = value;
					this.SendPropertyChanged("PhieuNhapID");
					this.OnPhieuNhapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SanPhamID
		{
			get
			{
				return this._SanPhamID;
			}
			set
			{
				if ((this._SanPhamID != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPhamIDChanging(value);
					this.SendPropertyChanging();
					this._SanPhamID = value;
					this.SendPropertyChanged("SanPhamID");
					this.OnSanPhamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaNhap", DbType="Float")]
		public System.Nullable<double> GiaNhap
		{
			get
			{
				return this._GiaNhap;
			}
			set
			{
				if ((this._GiaNhap != value))
				{
					this.OnGiaNhapChanging(value);
					this.SendPropertyChanging();
					this._GiaNhap = value;
					this.SendPropertyChanged("GiaNhap");
					this.OnGiaNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", AutoSync=AutoSync.Always, DbType="Float", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_ChiTietPhieuNhap", Storage="_PhieuNhap", ThisKey="PhieuNhapID", OtherKey="PhieuNhapID", IsForeignKey=true)]
		public PhieuNhap PhieuNhap
		{
			get
			{
				return this._PhieuNhap.Entity;
			}
			set
			{
				PhieuNhap previousValue = this._PhieuNhap.Entity;
				if (((previousValue != value) 
							|| (this._PhieuNhap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuNhap.Entity = null;
						previousValue.ChiTietPhieuNhaps.Remove(this);
					}
					this._PhieuNhap.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuNhaps.Add(this);
						this._PhieuNhapID = value.PhieuNhapID;
					}
					else
					{
						this._PhieuNhapID = default(string);
					}
					this.SendPropertyChanged("PhieuNhap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietPhieuNhap", Storage="_SanPham", ThisKey="SanPhamID", OtherKey="SanPhamID", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietPhieuNhaps.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuNhaps.Add(this);
						this._SanPhamID = value.SanPhamID;
					}
					else
					{
						this._SanPhamID = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViTriKho")]
	public partial class ViTriKho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ViTriID;
		
		private string _DanhMucID;
		
		private string _SanPhamID;
		
		private int _SoLuong;
		
		private int _SoLuongToiDa;
		
		private EntitySet<LichSuXuatKho> _LichSuXuatKhos;
		
		private EntityRef<DanhMuc> _DanhMuc;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnViTriIDChanging(string value);
    partial void OnViTriIDChanged();
    partial void OnDanhMucIDChanging(string value);
    partial void OnDanhMucIDChanged();
    partial void OnSanPhamIDChanging(string value);
    partial void OnSanPhamIDChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnSoLuongToiDaChanging(int value);
    partial void OnSoLuongToiDaChanged();
    #endregion
		
		public ViTriKho()
		{
			this._LichSuXuatKhos = new EntitySet<LichSuXuatKho>(new Action<LichSuXuatKho>(this.attach_LichSuXuatKhos), new Action<LichSuXuatKho>(this.detach_LichSuXuatKhos));
			this._DanhMuc = default(EntityRef<DanhMuc>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViTriID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ViTriID
		{
			get
			{
				return this._ViTriID;
			}
			set
			{
				if ((this._ViTriID != value))
				{
					this.OnViTriIDChanging(value);
					this.SendPropertyChanging();
					this._ViTriID = value;
					this.SendPropertyChanged("ViTriID");
					this.OnViTriIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanhMucID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DanhMucID
		{
			get
			{
				return this._DanhMucID;
			}
			set
			{
				if ((this._DanhMucID != value))
				{
					if (this._DanhMuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDanhMucIDChanging(value);
					this.SendPropertyChanging();
					this._DanhMucID = value;
					this.SendPropertyChanged("DanhMucID");
					this.OnDanhMucIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamID", DbType="VarChar(20)")]
		public string SanPhamID
		{
			get
			{
				return this._SanPhamID;
			}
			set
			{
				if ((this._SanPhamID != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPhamIDChanging(value);
					this.SendPropertyChanging();
					this._SanPhamID = value;
					this.SendPropertyChanged("SanPhamID");
					this.OnSanPhamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongToiDa", DbType="Int NOT NULL")]
		public int SoLuongToiDa
		{
			get
			{
				return this._SoLuongToiDa;
			}
			set
			{
				if ((this._SoLuongToiDa != value))
				{
					this.OnSoLuongToiDaChanging(value);
					this.SendPropertyChanging();
					this._SoLuongToiDa = value;
					this.SendPropertyChanged("SoLuongToiDa");
					this.OnSoLuongToiDaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ViTriKho_LichSuXuatKho", Storage="_LichSuXuatKhos", ThisKey="ViTriID,DanhMucID", OtherKey="ViTriID,DanhMucID")]
		public EntitySet<LichSuXuatKho> LichSuXuatKhos
		{
			get
			{
				return this._LichSuXuatKhos;
			}
			set
			{
				this._LichSuXuatKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_ViTriKho", Storage="_DanhMuc", ThisKey="DanhMucID", OtherKey="DanhMucID", IsForeignKey=true)]
		public DanhMuc DanhMuc
		{
			get
			{
				return this._DanhMuc.Entity;
			}
			set
			{
				DanhMuc previousValue = this._DanhMuc.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc.Entity = null;
						previousValue.ViTriKhos.Remove(this);
					}
					this._DanhMuc.Entity = value;
					if ((value != null))
					{
						value.ViTriKhos.Add(this);
						this._DanhMucID = value.DanhMucID;
					}
					else
					{
						this._DanhMucID = default(string);
					}
					this.SendPropertyChanged("DanhMuc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ViTriKho", Storage="_SanPham", ThisKey="SanPhamID", OtherKey="SanPhamID", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ViTriKhos.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ViTriKhos.Add(this);
						this._SanPhamID = value.SanPhamID;
					}
					else
					{
						this._SanPhamID = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LichSuXuatKhos(LichSuXuatKho entity)
		{
			this.SendPropertyChanging();
			entity.ViTriKho = this;
		}
		
		private void detach_LichSuXuatKhos(LichSuXuatKho entity)
		{
			this.SendPropertyChanging();
			entity.ViTriKho = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietPhieuXuat")]
	public partial class ChiTietPhieuXuat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PhieuXuatID;
		
		private string _SanPhamID;
		
		private int _SoLuong;
		
		private System.Nullable<double> _GiaXuat;
		
		private System.Nullable<double> _TongTien;
		
		private EntityRef<PhieuXuat> _PhieuXuat;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhieuXuatIDChanging(string value);
    partial void OnPhieuXuatIDChanged();
    partial void OnSanPhamIDChanging(string value);
    partial void OnSanPhamIDChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnGiaXuatChanging(System.Nullable<double> value);
    partial void OnGiaXuatChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    #endregion
		
		public ChiTietPhieuXuat()
		{
			this._PhieuXuat = default(EntityRef<PhieuXuat>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhieuXuatID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PhieuXuatID
		{
			get
			{
				return this._PhieuXuatID;
			}
			set
			{
				if ((this._PhieuXuatID != value))
				{
					if (this._PhieuXuat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhieuXuatIDChanging(value);
					this.SendPropertyChanging();
					this._PhieuXuatID = value;
					this.SendPropertyChanged("PhieuXuatID");
					this.OnPhieuXuatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SanPhamID
		{
			get
			{
				return this._SanPhamID;
			}
			set
			{
				if ((this._SanPhamID != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPhamIDChanging(value);
					this.SendPropertyChanging();
					this._SanPhamID = value;
					this.SendPropertyChanged("SanPhamID");
					this.OnSanPhamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaXuat", DbType="Float")]
		public System.Nullable<double> GiaXuat
		{
			get
			{
				return this._GiaXuat;
			}
			set
			{
				if ((this._GiaXuat != value))
				{
					this.OnGiaXuatChanging(value);
					this.SendPropertyChanging();
					this._GiaXuat = value;
					this.SendPropertyChanged("GiaXuat");
					this.OnGiaXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", AutoSync=AutoSync.Always, DbType="Float", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuXuat_ChiTietPhieuXuat", Storage="_PhieuXuat", ThisKey="PhieuXuatID", OtherKey="PhieuXuatID", IsForeignKey=true)]
		public PhieuXuat PhieuXuat
		{
			get
			{
				return this._PhieuXuat.Entity;
			}
			set
			{
				PhieuXuat previousValue = this._PhieuXuat.Entity;
				if (((previousValue != value) 
							|| (this._PhieuXuat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuXuat.Entity = null;
						previousValue.ChiTietPhieuXuats.Remove(this);
					}
					this._PhieuXuat.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuXuats.Add(this);
						this._PhieuXuatID = value.PhieuXuatID;
					}
					else
					{
						this._PhieuXuatID = default(string);
					}
					this.SendPropertyChanged("PhieuXuat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietPhieuXuat", Storage="_SanPham", ThisKey="SanPhamID", OtherKey="SanPhamID", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietPhieuXuats.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuXuats.Add(this);
						this._SanPhamID = value.SanPhamID;
					}
					else
					{
						this._SanPhamID = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc")]
	public partial class DanhMuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DanhMucID;
		
		private string _TenDanhMuc;
		
		private EntitySet<ViTriKho> _ViTriKhos;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDanhMucIDChanging(string value);
    partial void OnDanhMucIDChanged();
    partial void OnTenDanhMucChanging(string value);
    partial void OnTenDanhMucChanged();
    #endregion
		
		public DanhMuc()
		{
			this._ViTriKhos = new EntitySet<ViTriKho>(new Action<ViTriKho>(this.attach_ViTriKhos), new Action<ViTriKho>(this.detach_ViTriKhos));
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanhMucID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DanhMucID
		{
			get
			{
				return this._DanhMucID;
			}
			set
			{
				if ((this._DanhMucID != value))
				{
					this.OnDanhMucIDChanging(value);
					this.SendPropertyChanging();
					this._DanhMucID = value;
					this.SendPropertyChanged("DanhMucID");
					this.OnDanhMucIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDanhMuc", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenDanhMuc
		{
			get
			{
				return this._TenDanhMuc;
			}
			set
			{
				if ((this._TenDanhMuc != value))
				{
					this.OnTenDanhMucChanging(value);
					this.SendPropertyChanging();
					this._TenDanhMuc = value;
					this.SendPropertyChanged("TenDanhMuc");
					this.OnTenDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_ViTriKho", Storage="_ViTriKhos", ThisKey="DanhMucID", OtherKey="DanhMucID")]
		public EntitySet<ViTriKho> ViTriKhos
		{
			get
			{
				return this._ViTriKhos;
			}
			set
			{
				this._ViTriKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_SanPham", Storage="_SanPhams", ThisKey="DanhMucID", OtherKey="DanhMucID")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ViTriKhos(ViTriKho entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = this;
		}
		
		private void detach_ViTriKhos(ViTriKho entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = null;
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _KhachHangID;
		
		private string _TenKH;
		
		private string _DiaChi;
		
		private string _ThanhPho;
		
		private string _SDT;
		
		private EntitySet<PhieuXuat> _PhieuXuats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKhachHangIDChanging(string value);
    partial void OnKhachHangIDChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnThanhPhoChanging(string value);
    partial void OnThanhPhoChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public KhachHang()
		{
			this._PhieuXuats = new EntitySet<PhieuXuat>(new Action<PhieuXuat>(this.attach_PhieuXuats), new Action<PhieuXuat>(this.detach_PhieuXuats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhachHangID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string KhachHangID
		{
			get
			{
				return this._KhachHangID;
			}
			set
			{
				if ((this._KhachHangID != value))
				{
					this.OnKhachHangIDChanging(value);
					this.SendPropertyChanging();
					this._KhachHangID = value;
					this.SendPropertyChanged("KhachHangID");
					this.OnKhachHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(MAX)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(MAX)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhPho", DbType="NVarChar(MAX)")]
		public string ThanhPho
		{
			get
			{
				return this._ThanhPho;
			}
			set
			{
				if ((this._ThanhPho != value))
				{
					this.OnThanhPhoChanging(value);
					this.SendPropertyChanging();
					this._ThanhPho = value;
					this.SendPropertyChanged("ThanhPho");
					this.OnThanhPhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(20)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhieuXuat", Storage="_PhieuXuats", ThisKey="KhachHangID", OtherKey="KhachHangID")]
		public EntitySet<PhieuXuat> PhieuXuats
		{
			get
			{
				return this._PhieuXuats;
			}
			set
			{
				this._PhieuXuats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuXuats(PhieuXuat entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_PhieuXuats(PhieuXuat entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichSuXuatKho")]
	public partial class LichSuXuatKho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PhieuXuatID;
		
		private string _ViTriID;
		
		private string _DanhMucID;
		
		private string _SanPhamID;
		
		private int _SoLuong;
		
		private EntityRef<ViTriKho> _ViTriKho;
		
		private EntityRef<PhieuXuat> _PhieuXuat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhieuXuatIDChanging(string value);
    partial void OnPhieuXuatIDChanged();
    partial void OnViTriIDChanging(string value);
    partial void OnViTriIDChanged();
    partial void OnDanhMucIDChanging(string value);
    partial void OnDanhMucIDChanged();
    partial void OnSanPhamIDChanging(string value);
    partial void OnSanPhamIDChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    #endregion
		
		public LichSuXuatKho()
		{
			this._ViTriKho = default(EntityRef<ViTriKho>);
			this._PhieuXuat = default(EntityRef<PhieuXuat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhieuXuatID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PhieuXuatID
		{
			get
			{
				return this._PhieuXuatID;
			}
			set
			{
				if ((this._PhieuXuatID != value))
				{
					if (this._PhieuXuat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhieuXuatIDChanging(value);
					this.SendPropertyChanging();
					this._PhieuXuatID = value;
					this.SendPropertyChanged("PhieuXuatID");
					this.OnPhieuXuatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViTriID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ViTriID
		{
			get
			{
				return this._ViTriID;
			}
			set
			{
				if ((this._ViTriID != value))
				{
					if (this._ViTriKho.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnViTriIDChanging(value);
					this.SendPropertyChanging();
					this._ViTriID = value;
					this.SendPropertyChanged("ViTriID");
					this.OnViTriIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanhMucID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DanhMucID
		{
			get
			{
				return this._DanhMucID;
			}
			set
			{
				if ((this._DanhMucID != value))
				{
					if (this._ViTriKho.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDanhMucIDChanging(value);
					this.SendPropertyChanging();
					this._DanhMucID = value;
					this.SendPropertyChanged("DanhMucID");
					this.OnDanhMucIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamID", DbType="VarChar(20)")]
		public string SanPhamID
		{
			get
			{
				return this._SanPhamID;
			}
			set
			{
				if ((this._SanPhamID != value))
				{
					this.OnSanPhamIDChanging(value);
					this.SendPropertyChanging();
					this._SanPhamID = value;
					this.SendPropertyChanged("SanPhamID");
					this.OnSanPhamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ViTriKho_LichSuXuatKho", Storage="_ViTriKho", ThisKey="ViTriID,DanhMucID", OtherKey="ViTriID,DanhMucID", IsForeignKey=true)]
		public ViTriKho ViTriKho
		{
			get
			{
				return this._ViTriKho.Entity;
			}
			set
			{
				ViTriKho previousValue = this._ViTriKho.Entity;
				if (((previousValue != value) 
							|| (this._ViTriKho.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ViTriKho.Entity = null;
						previousValue.LichSuXuatKhos.Remove(this);
					}
					this._ViTriKho.Entity = value;
					if ((value != null))
					{
						value.LichSuXuatKhos.Add(this);
						this._ViTriID = value.ViTriID;
						this._DanhMucID = value.DanhMucID;
					}
					else
					{
						this._ViTriID = default(string);
						this._DanhMucID = default(string);
					}
					this.SendPropertyChanged("ViTriKho");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuXuat_LichSuXuatKho", Storage="_PhieuXuat", ThisKey="PhieuXuatID", OtherKey="PhieuXuatID", IsForeignKey=true)]
		public PhieuXuat PhieuXuat
		{
			get
			{
				return this._PhieuXuat.Entity;
			}
			set
			{
				PhieuXuat previousValue = this._PhieuXuat.Entity;
				if (((previousValue != value) 
							|| (this._PhieuXuat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuXuat.Entity = null;
						previousValue.LichSuXuatKhos.Remove(this);
					}
					this._PhieuXuat.Entity = value;
					if ((value != null))
					{
						value.LichSuXuatKhos.Add(this);
						this._PhieuXuatID = value.PhieuXuatID;
					}
					else
					{
						this._PhieuXuatID = default(string);
					}
					this.SendPropertyChanged("PhieuXuat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCungCap")]
	public partial class NhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NhaCungCapID;
		
		private string _TenNhaCungCap;
		
		private string _DiaChi;
		
		private string _ThanhPho;
		
		private string _DienThoai;
		
		private EntitySet<PhieuNhap> _PhieuNhaps;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNhaCungCapIDChanging(string value);
    partial void OnNhaCungCapIDChanged();
    partial void OnTenNhaCungCapChanging(string value);
    partial void OnTenNhaCungCapChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnThanhPhoChanging(string value);
    partial void OnThanhPhoChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    #endregion
		
		public NhaCungCap()
		{
			this._PhieuNhaps = new EntitySet<PhieuNhap>(new Action<PhieuNhap>(this.attach_PhieuNhaps), new Action<PhieuNhap>(this.detach_PhieuNhaps));
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhaCungCapID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NhaCungCapID
		{
			get
			{
				return this._NhaCungCapID;
			}
			set
			{
				if ((this._NhaCungCapID != value))
				{
					this.OnNhaCungCapIDChanging(value);
					this.SendPropertyChanging();
					this._NhaCungCapID = value;
					this.SendPropertyChanged("NhaCungCapID");
					this.OnNhaCungCapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhaCungCap", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenNhaCungCap
		{
			get
			{
				return this._TenNhaCungCap;
			}
			set
			{
				if ((this._TenNhaCungCap != value))
				{
					this.OnTenNhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._TenNhaCungCap = value;
					this.SendPropertyChanged("TenNhaCungCap");
					this.OnTenNhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(MAX)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhPho", DbType="NVarChar(MAX)")]
		public string ThanhPho
		{
			get
			{
				return this._ThanhPho;
			}
			set
			{
				if ((this._ThanhPho != value))
				{
					this.OnThanhPhoChanging(value);
					this.SendPropertyChanging();
					this._ThanhPho = value;
					this.SendPropertyChanged("ThanhPho");
					this.OnThanhPhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(15)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_PhieuNhap", Storage="_PhieuNhaps", ThisKey="NhaCungCapID", OtherKey="NhaCungCapID")]
		public EntitySet<PhieuNhap> PhieuNhaps
		{
			get
			{
				return this._PhieuNhaps;
			}
			set
			{
				this._PhieuNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_SanPham", Storage="_SanPhams", ThisKey="NhaCungCapID", OtherKey="NhaCungCapID")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuNhaps(PhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = this;
		}
		
		private void detach_PhieuNhaps(PhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = null;
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NhanVienID;
		
		private string _MatKhau;
		
		private string _HoTen;
		
		private string _DienThoai;
		
		private string _VaiTroID;
		
		private EntitySet<PhieuNhap> _PhieuNhaps;
		
		private EntitySet<PhieuXuat> _PhieuXuats;
		
		private EntityRef<VaiTro> _VaiTro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNhanVienIDChanging(string value);
    partial void OnNhanVienIDChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnVaiTroIDChanging(string value);
    partial void OnVaiTroIDChanged();
    #endregion
		
		public NhanVien()
		{
			this._PhieuNhaps = new EntitySet<PhieuNhap>(new Action<PhieuNhap>(this.attach_PhieuNhaps), new Action<PhieuNhap>(this.detach_PhieuNhaps));
			this._PhieuXuats = new EntitySet<PhieuXuat>(new Action<PhieuXuat>(this.attach_PhieuXuats), new Action<PhieuXuat>(this.detach_PhieuXuats));
			this._VaiTro = default(EntityRef<VaiTro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhanVienID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NhanVienID
		{
			get
			{
				return this._NhanVienID;
			}
			set
			{
				if ((this._NhanVienID != value))
				{
					this.OnNhanVienIDChanging(value);
					this.SendPropertyChanging();
					this._NhanVienID = value;
					this.SendPropertyChanged("NhanVienID");
					this.OnNhanVienIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="Char(10)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(15)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VaiTroID", DbType="VarChar(50)")]
		public string VaiTroID
		{
			get
			{
				return this._VaiTroID;
			}
			set
			{
				if ((this._VaiTroID != value))
				{
					if (this._VaiTro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVaiTroIDChanging(value);
					this.SendPropertyChanging();
					this._VaiTroID = value;
					this.SendPropertyChanged("VaiTroID");
					this.OnVaiTroIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuNhap", Storage="_PhieuNhaps", ThisKey="NhanVienID", OtherKey="NhanVienID")]
		public EntitySet<PhieuNhap> PhieuNhaps
		{
			get
			{
				return this._PhieuNhaps;
			}
			set
			{
				this._PhieuNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuXuat", Storage="_PhieuXuats", ThisKey="NhanVienID", OtherKey="NhanVienID")]
		public EntitySet<PhieuXuat> PhieuXuats
		{
			get
			{
				return this._PhieuXuats;
			}
			set
			{
				this._PhieuXuats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VaiTro_NhanVien", Storage="_VaiTro", ThisKey="VaiTroID", OtherKey="VaiTroID", IsForeignKey=true)]
		public VaiTro VaiTro
		{
			get
			{
				return this._VaiTro.Entity;
			}
			set
			{
				VaiTro previousValue = this._VaiTro.Entity;
				if (((previousValue != value) 
							|| (this._VaiTro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VaiTro.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._VaiTro.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._VaiTroID = value.VaiTroID;
					}
					else
					{
						this._VaiTroID = default(string);
					}
					this.SendPropertyChanged("VaiTro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuNhaps(PhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhieuNhaps(PhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_PhieuXuats(PhieuXuat entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhieuXuats(PhieuXuat entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuNhap")]
	public partial class PhieuNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PhieuNhapID;
		
		private string _NhaCungCapID;
		
		private string _NhanVienID;
		
		private System.DateTime _NgayNhap;
		
		private string _GhiChu;
		
		private System.Nullable<double> _TongTien;
		
		private EntitySet<ChiTietPhieuNhap> _ChiTietPhieuNhaps;
		
		private EntityRef<NhaCungCap> _NhaCungCap;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhieuNhapIDChanging(string value);
    partial void OnPhieuNhapIDChanged();
    partial void OnNhaCungCapIDChanging(string value);
    partial void OnNhaCungCapIDChanged();
    partial void OnNhanVienIDChanging(string value);
    partial void OnNhanVienIDChanged();
    partial void OnNgayNhapChanging(System.DateTime value);
    partial void OnNgayNhapChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    #endregion
		
		public PhieuNhap()
		{
			this._ChiTietPhieuNhaps = new EntitySet<ChiTietPhieuNhap>(new Action<ChiTietPhieuNhap>(this.attach_ChiTietPhieuNhaps), new Action<ChiTietPhieuNhap>(this.detach_ChiTietPhieuNhaps));
			this._NhaCungCap = default(EntityRef<NhaCungCap>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhieuNhapID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PhieuNhapID
		{
			get
			{
				return this._PhieuNhapID;
			}
			set
			{
				if ((this._PhieuNhapID != value))
				{
					this.OnPhieuNhapIDChanging(value);
					this.SendPropertyChanging();
					this._PhieuNhapID = value;
					this.SendPropertyChanged("PhieuNhapID");
					this.OnPhieuNhapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhaCungCapID", DbType="VarChar(20)")]
		public string NhaCungCapID
		{
			get
			{
				return this._NhaCungCapID;
			}
			set
			{
				if ((this._NhaCungCapID != value))
				{
					if (this._NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhaCungCapIDChanging(value);
					this.SendPropertyChanging();
					this._NhaCungCapID = value;
					this.SendPropertyChanged("NhaCungCapID");
					this.OnNhaCungCapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhanVienID", DbType="VarChar(20)")]
		public string NhanVienID
		{
			get
			{
				return this._NhanVienID;
			}
			set
			{
				if ((this._NhanVienID != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhanVienIDChanging(value);
					this.SendPropertyChanging();
					this._NhanVienID = value;
					this.SendPropertyChanged("NhanVienID");
					this.OnNhanVienIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="DateTime NOT NULL")]
		public System.DateTime NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(255)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_ChiTietPhieuNhap", Storage="_ChiTietPhieuNhaps", ThisKey="PhieuNhapID", OtherKey="PhieuNhapID")]
		public EntitySet<ChiTietPhieuNhap> ChiTietPhieuNhaps
		{
			get
			{
				return this._ChiTietPhieuNhaps;
			}
			set
			{
				this._ChiTietPhieuNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_PhieuNhap", Storage="_NhaCungCap", ThisKey="NhaCungCapID", OtherKey="NhaCungCapID", IsForeignKey=true)]
		public NhaCungCap NhaCungCap
		{
			get
			{
				return this._NhaCungCap.Entity;
			}
			set
			{
				NhaCungCap previousValue = this._NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCap.Entity = null;
						previousValue.PhieuNhaps.Remove(this);
					}
					this._NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.PhieuNhaps.Add(this);
						this._NhaCungCapID = value.NhaCungCapID;
					}
					else
					{
						this._NhaCungCapID = default(string);
					}
					this.SendPropertyChanged("NhaCungCap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuNhap", Storage="_NhanVien", ThisKey="NhanVienID", OtherKey="NhanVienID", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhieuNhaps.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhieuNhaps.Add(this);
						this._NhanVienID = value.NhanVienID;
					}
					else
					{
						this._NhanVienID = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhieuNhaps(ChiTietPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap = this;
		}
		
		private void detach_ChiTietPhieuNhaps(ChiTietPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuXuat")]
	public partial class PhieuXuat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PhieuXuatID;
		
		private string _KhachHangID;
		
		private string _NhanVienID;
		
		private System.DateTime _NgayXuat;
		
		private string _GhiChu;
		
		private System.Nullable<double> _TongTien;
		
		private EntitySet<ChiTietPhieuXuat> _ChiTietPhieuXuats;
		
		private EntitySet<LichSuXuatKho> _LichSuXuatKhos;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhieuXuatIDChanging(string value);
    partial void OnPhieuXuatIDChanged();
    partial void OnKhachHangIDChanging(string value);
    partial void OnKhachHangIDChanged();
    partial void OnNhanVienIDChanging(string value);
    partial void OnNhanVienIDChanged();
    partial void OnNgayXuatChanging(System.DateTime value);
    partial void OnNgayXuatChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    #endregion
		
		public PhieuXuat()
		{
			this._ChiTietPhieuXuats = new EntitySet<ChiTietPhieuXuat>(new Action<ChiTietPhieuXuat>(this.attach_ChiTietPhieuXuats), new Action<ChiTietPhieuXuat>(this.detach_ChiTietPhieuXuats));
			this._LichSuXuatKhos = new EntitySet<LichSuXuatKho>(new Action<LichSuXuatKho>(this.attach_LichSuXuatKhos), new Action<LichSuXuatKho>(this.detach_LichSuXuatKhos));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhieuXuatID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PhieuXuatID
		{
			get
			{
				return this._PhieuXuatID;
			}
			set
			{
				if ((this._PhieuXuatID != value))
				{
					this.OnPhieuXuatIDChanging(value);
					this.SendPropertyChanging();
					this._PhieuXuatID = value;
					this.SendPropertyChanged("PhieuXuatID");
					this.OnPhieuXuatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhachHangID", DbType="VarChar(20)")]
		public string KhachHangID
		{
			get
			{
				return this._KhachHangID;
			}
			set
			{
				if ((this._KhachHangID != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhachHangIDChanging(value);
					this.SendPropertyChanging();
					this._KhachHangID = value;
					this.SendPropertyChanged("KhachHangID");
					this.OnKhachHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhanVienID", DbType="VarChar(20)")]
		public string NhanVienID
		{
			get
			{
				return this._NhanVienID;
			}
			set
			{
				if ((this._NhanVienID != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhanVienIDChanging(value);
					this.SendPropertyChanging();
					this._NhanVienID = value;
					this.SendPropertyChanged("NhanVienID");
					this.OnNhanVienIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayXuat", DbType="DateTime NOT NULL")]
		public System.DateTime NgayXuat
		{
			get
			{
				return this._NgayXuat;
			}
			set
			{
				if ((this._NgayXuat != value))
				{
					this.OnNgayXuatChanging(value);
					this.SendPropertyChanging();
					this._NgayXuat = value;
					this.SendPropertyChanged("NgayXuat");
					this.OnNgayXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(255)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuXuat_ChiTietPhieuXuat", Storage="_ChiTietPhieuXuats", ThisKey="PhieuXuatID", OtherKey="PhieuXuatID")]
		public EntitySet<ChiTietPhieuXuat> ChiTietPhieuXuats
		{
			get
			{
				return this._ChiTietPhieuXuats;
			}
			set
			{
				this._ChiTietPhieuXuats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuXuat_LichSuXuatKho", Storage="_LichSuXuatKhos", ThisKey="PhieuXuatID", OtherKey="PhieuXuatID")]
		public EntitySet<LichSuXuatKho> LichSuXuatKhos
		{
			get
			{
				return this._LichSuXuatKhos;
			}
			set
			{
				this._LichSuXuatKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhieuXuat", Storage="_KhachHang", ThisKey="KhachHangID", OtherKey="KhachHangID", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.PhieuXuats.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.PhieuXuats.Add(this);
						this._KhachHangID = value.KhachHangID;
					}
					else
					{
						this._KhachHangID = default(string);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuXuat", Storage="_NhanVien", ThisKey="NhanVienID", OtherKey="NhanVienID", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhieuXuats.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhieuXuats.Add(this);
						this._NhanVienID = value.NhanVienID;
					}
					else
					{
						this._NhanVienID = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhieuXuats(ChiTietPhieuXuat entity)
		{
			this.SendPropertyChanging();
			entity.PhieuXuat = this;
		}
		
		private void detach_ChiTietPhieuXuats(ChiTietPhieuXuat entity)
		{
			this.SendPropertyChanging();
			entity.PhieuXuat = null;
		}
		
		private void attach_LichSuXuatKhos(LichSuXuatKho entity)
		{
			this.SendPropertyChanging();
			entity.PhieuXuat = this;
		}
		
		private void detach_LichSuXuatKhos(LichSuXuatKho entity)
		{
			this.SendPropertyChanging();
			entity.PhieuXuat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SanPhamID;
		
		private string _TenSanPham;
		
		private int _SoLuong;
		
		private int _SanPhamToiThieu;
		
		private System.Nullable<double> _GiaBan;
		
		private string _DanhMucID;
		
		private string _NhaCungCapID;
		
		private EntitySet<ChiTietPhieuNhap> _ChiTietPhieuNhaps;
		
		private EntitySet<ViTriKho> _ViTriKhos;
		
		private EntitySet<ChiTietPhieuXuat> _ChiTietPhieuXuats;
		
		private EntityRef<DanhMuc> _DanhMuc;
		
		private EntityRef<NhaCungCap> _NhaCungCap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSanPhamIDChanging(string value);
    partial void OnSanPhamIDChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnSanPhamToiThieuChanging(int value);
    partial void OnSanPhamToiThieuChanged();
    partial void OnGiaBanChanging(System.Nullable<double> value);
    partial void OnGiaBanChanged();
    partial void OnDanhMucIDChanging(string value);
    partial void OnDanhMucIDChanged();
    partial void OnNhaCungCapIDChanging(string value);
    partial void OnNhaCungCapIDChanged();
    #endregion
		
		public SanPham()
		{
			this._ChiTietPhieuNhaps = new EntitySet<ChiTietPhieuNhap>(new Action<ChiTietPhieuNhap>(this.attach_ChiTietPhieuNhaps), new Action<ChiTietPhieuNhap>(this.detach_ChiTietPhieuNhaps));
			this._ViTriKhos = new EntitySet<ViTriKho>(new Action<ViTriKho>(this.attach_ViTriKhos), new Action<ViTriKho>(this.detach_ViTriKhos));
			this._ChiTietPhieuXuats = new EntitySet<ChiTietPhieuXuat>(new Action<ChiTietPhieuXuat>(this.attach_ChiTietPhieuXuats), new Action<ChiTietPhieuXuat>(this.detach_ChiTietPhieuXuats));
			this._DanhMuc = default(EntityRef<DanhMuc>);
			this._NhaCungCap = default(EntityRef<NhaCungCap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SanPhamID
		{
			get
			{
				return this._SanPhamID;
			}
			set
			{
				if ((this._SanPhamID != value))
				{
					this.OnSanPhamIDChanging(value);
					this.SendPropertyChanging();
					this._SanPhamID = value;
					this.SendPropertyChanged("SanPhamID");
					this.OnSanPhamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamToiThieu", DbType="Int NOT NULL")]
		public int SanPhamToiThieu
		{
			get
			{
				return this._SanPhamToiThieu;
			}
			set
			{
				if ((this._SanPhamToiThieu != value))
				{
					this.OnSanPhamToiThieuChanging(value);
					this.SendPropertyChanging();
					this._SanPhamToiThieu = value;
					this.SendPropertyChanged("SanPhamToiThieu");
					this.OnSanPhamToiThieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Float")]
		public System.Nullable<double> GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanhMucID", DbType="VarChar(20)")]
		public string DanhMucID
		{
			get
			{
				return this._DanhMucID;
			}
			set
			{
				if ((this._DanhMucID != value))
				{
					if (this._DanhMuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDanhMucIDChanging(value);
					this.SendPropertyChanging();
					this._DanhMucID = value;
					this.SendPropertyChanged("DanhMucID");
					this.OnDanhMucIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhaCungCapID", DbType="VarChar(20)")]
		public string NhaCungCapID
		{
			get
			{
				return this._NhaCungCapID;
			}
			set
			{
				if ((this._NhaCungCapID != value))
				{
					if (this._NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhaCungCapIDChanging(value);
					this.SendPropertyChanging();
					this._NhaCungCapID = value;
					this.SendPropertyChanged("NhaCungCapID");
					this.OnNhaCungCapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietPhieuNhap", Storage="_ChiTietPhieuNhaps", ThisKey="SanPhamID", OtherKey="SanPhamID")]
		public EntitySet<ChiTietPhieuNhap> ChiTietPhieuNhaps
		{
			get
			{
				return this._ChiTietPhieuNhaps;
			}
			set
			{
				this._ChiTietPhieuNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ViTriKho", Storage="_ViTriKhos", ThisKey="SanPhamID", OtherKey="SanPhamID")]
		public EntitySet<ViTriKho> ViTriKhos
		{
			get
			{
				return this._ViTriKhos;
			}
			set
			{
				this._ViTriKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietPhieuXuat", Storage="_ChiTietPhieuXuats", ThisKey="SanPhamID", OtherKey="SanPhamID")]
		public EntitySet<ChiTietPhieuXuat> ChiTietPhieuXuats
		{
			get
			{
				return this._ChiTietPhieuXuats;
			}
			set
			{
				this._ChiTietPhieuXuats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_SanPham", Storage="_DanhMuc", ThisKey="DanhMucID", OtherKey="DanhMucID", IsForeignKey=true)]
		public DanhMuc DanhMuc
		{
			get
			{
				return this._DanhMuc.Entity;
			}
			set
			{
				DanhMuc previousValue = this._DanhMuc.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._DanhMuc.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._DanhMucID = value.DanhMucID;
					}
					else
					{
						this._DanhMucID = default(string);
					}
					this.SendPropertyChanged("DanhMuc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_SanPham", Storage="_NhaCungCap", ThisKey="NhaCungCapID", OtherKey="NhaCungCapID", IsForeignKey=true)]
		public NhaCungCap NhaCungCap
		{
			get
			{
				return this._NhaCungCap.Entity;
			}
			set
			{
				NhaCungCap previousValue = this._NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCap.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._NhaCungCapID = value.NhaCungCapID;
					}
					else
					{
						this._NhaCungCapID = default(string);
					}
					this.SendPropertyChanged("NhaCungCap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhieuNhaps(ChiTietPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietPhieuNhaps(ChiTietPhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_ViTriKhos(ViTriKho entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ViTriKhos(ViTriKho entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_ChiTietPhieuXuats(ChiTietPhieuXuat entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietPhieuXuats(ChiTietPhieuXuat entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VaiTro")]
	public partial class VaiTro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _VaiTroID;
		
		private string _TenVaiTro;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVaiTroIDChanging(string value);
    partial void OnVaiTroIDChanged();
    partial void OnTenVaiTroChanging(string value);
    partial void OnTenVaiTroChanged();
    #endregion
		
		public VaiTro()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VaiTroID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string VaiTroID
		{
			get
			{
				return this._VaiTroID;
			}
			set
			{
				if ((this._VaiTroID != value))
				{
					this.OnVaiTroIDChanging(value);
					this.SendPropertyChanging();
					this._VaiTroID = value;
					this.SendPropertyChanged("VaiTroID");
					this.OnVaiTroIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenVaiTro", DbType="NVarChar(50)")]
		public string TenVaiTro
		{
			get
			{
				return this._TenVaiTro;
			}
			set
			{
				if ((this._TenVaiTro != value))
				{
					this.OnTenVaiTroChanging(value);
					this.SendPropertyChanging();
					this._TenVaiTro = value;
					this.SendPropertyChanged("TenVaiTro");
					this.OnTenVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VaiTro_NhanVien", Storage="_NhanViens", ThisKey="VaiTroID", OtherKey="VaiTroID")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.VaiTro = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.VaiTro = null;
		}
	}
}
#pragma warning restore 1591
